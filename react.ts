function ThemeToggle() {
    
    // –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∏ —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const [theme, setTheme] = useState("—Å–≤–µ—Ç–ª–∞—è");

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É
  const toggleTheme = () => {
      // –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
        setTheme(theme === "—Å–≤–µ—Ç–ª–∞—è" ? "—Ç—ë–º–Ω–∞—è" : "—Å–≤–µ—Ç–ª–∞—è");
    }
 
  const themeClass = theme === "—Å–≤–µ—Ç–ª–∞—è" ? "th-light" : "th-dark";
  const buttonImage = theme === "—Å–≤–µ—Ç–ª–∞—è" ? "üåö" : "üåû";

    return (
    <div className={themeClass}>
            <p>–í–∫–ª—é—á–µ–Ω–∞ {theme} —Ç–µ–º–∞</p>
      <button onClick={toggleTheme}>
        {buttonImage}
      </button>
    </div>
  ); 
}

const [storedValue, setStoredValue] = useState(() => {
    try {
      const item = localStorage.getItem("item");
      return item ? JSON.parse(item) : "";
    } catch {
      return "";
    }
});

const [count, setCount] = useState(0);

function handleClick() {
    setCount(prevCount => prevCount + 1);
}

function handleClick() {
    setCount(prevCount => prevCount + 1);
    setCount(prevCount => prevCount + 1);
    setCount(prevCount => prevCount + 1);
 }